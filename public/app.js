"use strict";Chart.plugins.register({afterDatasetsDraw:function(chart){var ctx=chart.chart.ctx;ctx.fillStyle=Chart.defaults.global.defaultFontColor,ctx.font=Chart.helpers.fontString(12,"normal","Arial"),ctx.textAlign="center",ctx.textBaseline="middle";var xAxisYPoints=[];chart.data.datasets.forEach(function(dataset,i){var meta=chart.getDatasetMeta(i);if("line"==meta.type){var options=chart.options.plotLabelOptions;if(!options.hideAll){var lastX=0,lastY=0,firstPass=!1;meta.hidden||meta.data.forEach(function(element,index){var dataString="",currentValue=0;if(null!=dataset.data[index]){var item=dataset.data[index];dataString=options.valueFormatter?options.valueFormatter(item):item.toString(),currentValue=item}var previousValue=0,nextValue=0;0<index&&(previousValue=dataset.data[index-1]),index<dataset.data.length-1&&(nextValue=dataset.data[index+1]);var position=element.tooltipPosition(),thisX=position.x,thisY=position.y-6-5;1==options.allBottom&&(thisY=position.y+6+5);var txtWidth=ctx.measureText(dataString).width,render=!options.peakValleyOnly;if(currentValue<previousValue&&currentValue<nextValue&&(options.adjustValley&&(thisY=position.y+6+5),options.peakValleyOnly&&(render=!0)),previousValue<currentValue&&nextValue<currentValue&&options.peakValleyOnly&&(render=!0),null!=xAxisYPoints[thisX+txtWidth+5])for(var yPoints=xAxisYPoints[thisX+txtWidth+5],i=0;i<yPoints.length;i++){var yPoint=yPoints[i];if(thisY<yPoint+17&&yPoint-17<thisY){render=!1;break}}lastX<thisX&&0==firstPass&&render?(ctx.fillText(dataString,thisX,thisY),lastY=thisY,null==xAxisYPoints[lastX=thisX+txtWidth+5]?xAxisYPoints[lastX]=[lastY]:xAxisYPoints[lastX].push(lastY)):options.checkYCollision&&0==firstPass&&render&&(lastY+17<thisY||thisY<lastY-17)&&(ctx.fillText(dataString,thisX,thisY),lastY=thisY,null==xAxisYPoints[lastX=thisX+txtWidth+5]?xAxisYPoints[lastX]=[lastY]:xAxisYPoints[lastX].push(lastY)),1==firstPass&&(firstPass=!1)})}}})}}),function(){var module=angular.module("loadingIndicator",[]);module.directive("loadingIndicator",function(loadingCounts,$timeout){return{restrict:"A",link:function(scope,element,attrs){scope.$on("loading-started",function(e){loadingCounts.enable_count++,$timeout(function(){loadingCounts.enable_count>loadingCounts.disable_count&&element.css({display:""})},0)}),scope.$on("loading-complete",function(e){loadingCounts.disable_count++,loadingCounts.enable_count==loadingCounts.disable_count&&element.css({display:"none"})})}}}),module.config(function($httpProvider){$httpProvider.interceptors.push(function($q,$rootScope){return{request:function(config){return $rootScope.$broadcast("loading-started"),config||$q.when(config)},response:function(_response){return $rootScope.$broadcast("loading-complete"),_response||$q.when(_response)},responseError:function(rejection){return $rootScope.$broadcast("loading-complete"),$q.reject(rejection)}}})}),module.factory("loadingCounts",function(){return{enable_count:0,disable_count:0}})}(),function(){var module=angular.module("boilerplateModule",["chart.js","loadingIndicator","ngComponentRouter","rzModule","ui.bootstrap","ngAnimate","ngCookies"]);module.config(function($locationProvider){$locationProvider.html5Mode(!BoilerplateDefaults.isIE)}),module.value("$routerRootComponent","boilerplateRoot"),module.config(function($httpProvider){$httpProvider.interceptors.push(function($q,$rootScope){return{responseError:function(rejection){$rootScope.$broadcast("httpError",rejection)}}})})}(),angular.module("boilerplateModule").component("boilerplateRoot",{templateUrl:"app/boilerplate-root.component.html",controllerAs:"model",controller:["$cookies","$scope",function($cookies,$scope){var model=this;model.$onInit=function(){"false"==$cookies.get("isDarkTheme")?(model.darkTheme=!1,Chart.defaults.global.defaultFontColor="#666"):(model.darkTheme=!0,Chart.defaults.global.defaultFontColor="#FFFFFF")},model.darkTheme=!0,model.setDarkTheme=function(isDark){model.darkTheme=isDark,Chart.defaults.global.defaultFontColor=isDark?"#FFFFFF":"#666",$scope.$broadcast("redraw-data"),$cookies.put("isDarkTheme",isDark)},model.hasError=!1,$scope.$on("httpError",function(event,rejection){model.hasError=!0,model.errorData=rejection.data,model.errorText=rejection.statusText,console.log("boilerplate root component received httpError: ",rejection)})}],$routeConfig:[{path:"/chart-example",component:"chartExample",name:"ChartExample"},{path:"/**",redirectTo:["ChartExample",""]}]}),angular.module("boilerplateModule").component("chart",{bindings:{chartData:"<"},templateUrl:"app/DashComponents/Common/chart.component.html",controllerAs:"model",controller:["$scope",function($scope){var model=this;model.hiddenDatasetIndexes=[],$scope.$on("chart-create",function(evt,chart){model.chart=chart;for(var datasetUpdate=!1,i=0;i<model.hiddenDatasetIndexes.length;i++){var datasetIndex=model.hiddenDatasetIndexes[i];datasetUpdate=model.chart.getDatasetMeta(datasetIndex).hidden=!0}datasetUpdate&&model.chart.update()}),$scope.$on("chart-update",function(evt,chart){}),$scope.$on("chart-destroy",function(evt,chart){model.chart=null}),$scope.$on("redraw-data",function(){null!=model.chart&&model.chart.update()}),model.$onChanges=function(changes){model.bindGraph()},model.chartType=null,model.fill=null,model.stacked=null,model.fixedAxis=null,model.xLabelOffset=!0,model.yAxisPadding=0,model.max_xAxisTicks=15,model.toggleChartType=function(chartType){model.chartType=chartType,"line"!=model.chartType&&(model.fill=!1),model.bindGraph()},model.toggleFill=function(){model.fill=!model.fill,model.bindGraph()},model.toggleStacked=function(){model.stacked=!model.stacked,model.bindGraph()},model.toggleFixedAxis=function(){model.fixedAxis=!model.fixedAxis,model.bindGraph()},model.resetGraph=function(){model.fixedAxis=model.chartData.defaultFixedAxis,model.chartType=model.chartData.defaultType,model.fill=model.chartData.defaultFill,model.stacked=model.chartData.defaultStackedBar,model.bindGraph()},model.showResetButton=function(){return null!=model.chartData&&(model.chartType!=model.chartData.defaultType||model.fill!=model.chartData.defaultFill||model.stacked!=model.chartData.defaultStackedBar||model.fixedAxis!=model.chartData.defaultFixedAxis)},model.noData=function(){return null==model.chartData||null==model.chartData.dataSets||0==model.chartData.dataSets.length},model.bindGraph=function(){if(null!=model.chartData){model.labels=model.chartData.labels,null==model.chartType&&(model.chartType=model.chartData.defaultType),null==model.fill&&(model.fill=model.chartData.defaultFill),null==model.stacked&&(model.stacked=model.chartData.defaultStackedBar),null==model.fixedAxis&&(model.fixedAxis=model.chartData.defaultFixedAxis),model.disableStacked=model.chartData.disableStacked,model.type=model.chartType,model.onClick=model.chartData.onClick,model.data=[],model.datasetOverride=[];var _iteratorNormalCompletion=!0,_didIteratorError=!(model.colors=[]),_iteratorError=void 0;try{for(var _step,_iterator=model.chartData.dataSets[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var dataSet=_step.value;model.data.push(dataSet.data),model.colors.push(dataSet.color),model.datasetOverride.push({label:dataSet.label,type:model.chartType,fill:model.fill,hoverBackgroundColor:dataSet.hoverBackgroundColor,hoverBorderColor:dataSet.hoverBorderColor,borderDash:dataSet.borderDash})}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}if(null==model.options&&(model.options={tooltips:{position:"nearest",callbacks:{label:function(tooltipItem,data){var labelName=data.datasets[tooltipItem.datasetIndex].label||"",labelValue=data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index]||null;return null==labelValue?null:(model.options.plotLabelOptions.valueFormatter&&(labelValue=model.options.plotLabelOptions.valueFormatter(labelValue)),labelName+": "+labelValue)}}},maintainAspectRatio:!1,title:{display:!1,text:model.chartData.title},legend:{display:!0,position:"top",onClick:function(e,legendItem){var index=legendItem.datasetIndex,ci=this.chart,meta=ci.getDatasetMeta(index);if(meta.hidden=null===meta.hidden?!ci.data.datasets[index].hidden:null,ci.update(),1==meta.hidden)-1==model.hiddenDatasetIndexes.indexOf(index)&&model.hiddenDatasetIndexes.push(index);else{var indexToRemove=model.hiddenDatasetIndexes.indexOf(index);-1<indexToRemove&&model.hiddenDatasetIndexes.splice(indexToRemove,1)}},labels:{}},layout:{padding:{left:0,right:0,top:0,bottom:0}}}),model.chartData.plotLabelOptions&&null==model.options.plotLabelOptions){var incomingOptions=model.chartData.plotLabelOptions;model.options.plotLabelOptions={hideAll:incomingOptions.hideAll,adjustValley:incomingOptions.adjustValley,peakValleyOnly:incomingOptions.peakValleyOnly,checkYCollision:incomingOptions.checkYCollision,valueFormatter:incomingOptions.valueFormatter,allBottom:incomingOptions.allBottom}}else null==model.options.plotLabelOptions&&(model.options.plotLabelOptions={hideAll:!1,adjustValley:!1,peakValleyOnly:!1,checkYCollision:!1,allBottom:!1});1==model.stacked?(model.options.scales={xAxes:[{gridLines:{offsetGridLines:!0},stacked:!0,scaleLabel:{display:!1,labelString:"Month/Year"},ticks:{autoSkip:!0,maxTicksLimit:model.max_xAxisTicks}}],yAxes:[{stacked:!0,ticks:{stepSize:model.chartData.stepSize,padding:model.yAxisPadding},scaleLabel:{display:!0,labelString:model.chartData.yAxisLabel}}]},model.fixedAxis&&(model.options.scales.yAxes[0].ticks={max:model.chartData.max,min:model.chartData.min,stepSize:model.chartData.stepSize})):(model.options.scales={xAxes:[{weight:0,position:"bottom",offset:model.xLabelOffset,gridLines:{offsetGridLines:model.xLabelOffset},display:!0,scaleLabel:{display:!1,labelString:"Month-Year"},ticks:{autoSkip:!0,maxTicksLimit:model.max_xAxisTicks}}],yAxes:[{type:"linear",display:!0,position:"left",scaleLabel:{display:!0,labelString:model.chartData.yAxisLabel},ticks:{stepSize:model.chartData.stepSize,callback:function(value,index,values){return model.chartData.yAxisFormatter?model.chartData.yAxisFormatter(value):value}}}]},model.fixedAxis&&(model.options.scales.yAxes[0].ticks={max:model.chartData.max,min:model.chartData.min,stepSize:model.chartData.stepSize,callback:function(value,index,values){return model.chartData.yAxisFormatter?model.chartData.yAxisFormatter(value):value}}),model.options.scales.yAxes[0].ticks.padding=model.yAxisPadding)}}}]}),angular.module("boilerplateModule").component("chartExample",{templateUrl:"app/DashComponents/chart-example.component.html",bindings:{},controllerAs:"model",controller:["$http",function($http){var model=this;console.log("chart-example controller."),model.plotLabelOptions={hideAll:!0,adjustValley:!1,peakValleyOnly:!1,checkYCollision:!1,allBottom:!0,valueFormatter:function(value){return value.toFixed(1)}},model.yAxisFormatter=function(value){return value};var filters={};$http.post("/api/data",filters).then(function(response){console.log("results",response);for(var labels=[],cosDataArray=[],sinDataArray=[],tanDataArray=[],i=0;i<response.data.length;i++){var dataItem=response.data[i];cosDataArray.push(dataItem.cos),sinDataArray.push(dataItem.sin),tanDataArray.push(dataItem.tan),labels.push(dataItem.xValue)}var cosDataSet={data:cosDataArray,color:"#01B8AA",label:"Cos"},sinDataSet={data:sinDataArray,color:"#F2C80F",label:"Sin"},tanDataSet={data:tanDataArray,color:"#FD625E",label:"Tan"};model.environmentChartData={labels:labels,dataSets:[cosDataSet,sinDataSet,tanDataSet],defaultType:"line",defaultFill:!1,defaultStackedBar:!1,defaultFixedAxis:!1,min:-2,max:2,stepSize:1,yAxisLabel:"Value",plotLabelOptions:model.plotLabelOptions,yAxisFormatter:model.yAxisFormatter,disableStacked:!1,onClick:function(points,evt){console.log(points,evt)}}})}]});